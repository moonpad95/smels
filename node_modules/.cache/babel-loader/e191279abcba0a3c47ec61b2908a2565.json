{"ast":null,"code":"/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.chroma = factory();\n})(this, function () {\n  'use strict';\n\n  var limit = function limit(x, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return x < min ? min : x > max ? max : x;\n  };\n  var clip_rgb = function clip_rgb(rgb) {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (var i = 0; i <= 3; i++) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        rgb[i] = limit(rgb[i], 0, 255);\n      } else if (i === 3) {\n        rgb[i] = limit(rgb[i], 0, 1);\n      }\n    }\n    return rgb;\n  };\n\n  // ported from jQuery's $.type\n  var classToType = {};\n  for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n    var name = list[i];\n    classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n  }\n  var type = function type(obj) {\n    return classToType[Object.prototype.toString.call(obj)] || \"object\";\n  };\n  var unpack = function unpack(args, keyOrder) {\n    if (keyOrder === void 0) keyOrder = null;\n\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    }\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n      return keyOrder.split('').filter(function (k) {\n        return args[0][k] !== undefined;\n      }).map(function (k) {\n        return args[0][k];\n      });\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0];\n  };\n  var last = function last(args) {\n    if (args.length < 2) {\n      return null;\n    }\n    var l = args.length - 1;\n    if (type(args[l]) == 'string') {\n      return args[l].toLowerCase();\n    }\n    return null;\n  };\n  var PI = Math.PI;\n  var utils = {\n    clip_rgb: clip_rgb,\n    limit: limit,\n    type: type,\n    unpack: unpack,\n    last: last,\n    PI: PI,\n    TWOPI: PI * 2,\n    PITHIRD: PI / 3,\n    DEG2RAD: PI / 180,\n    RAD2DEG: 180 / PI\n  };\n  var input = {\n    format: {},\n    autodetect: []\n  };\n  var last$1 = utils.last;\n  var clip_rgb$1 = utils.clip_rgb;\n  var type$1 = utils.type;\n  var Color = function Color() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var me = this;\n    if (type$1(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    }\n\n    // last argument could be the mode\n    var mode = last$1(args);\n    var autodetect = false;\n    if (!mode) {\n      autodetect = true;\n      if (!input.sorted) {\n        input.autodetect = input.autodetect.sort(function (a, b) {\n          return b.p - a.p;\n        });\n        input.sorted = true;\n      }\n      // auto-detect format\n      for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n        var chk = list[i];\n        mode = chk.test.apply(chk, args);\n        if (mode) {\n          break;\n        }\n      }\n    }\n    if (input.format[mode]) {\n      var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n      me._rgb = clip_rgb$1(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    }\n\n    // add alpha channel\n    if (me._rgb.length === 3) {\n      me._rgb.push(1);\n    }\n  };\n  Color.prototype.toString = function toString() {\n    if (type$1(this.hex) == 'function') {\n      return this.hex();\n    }\n    return \"[\" + this._rgb.join(',') + \"]\";\n  };\n  var Color_1 = Color;\n  var chroma = function chroma() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(chroma.Color, [null].concat(args)))();\n  };\n  chroma.Color = Color_1;\n  chroma.version = '2.1.2';\n  var chroma_1 = chroma;\n  var unpack$1 = utils.unpack;\n  var max = Math.max;\n  var rgb2cmyk = function rgb2cmyk() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var ref = unpack$1(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var k = 1 - max(r, max(g, b));\n    var f = k < 1 ? 1 / (1 - k) : 0;\n    var c = (1 - r - k) * f;\n    var m = (1 - g - k) * f;\n    var y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n  var rgb2cmyk_1 = rgb2cmyk;\n  var unpack$2 = utils.unpack;\n  var cmyk2rgb = function cmyk2rgb() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$2(args, 'cmyk');\n    var c = args[0];\n    var m = args[1];\n    var y = args[2];\n    var k = args[3];\n    var alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    return [c >= 1 ? 0 : 255 * (1 - c) * (1 - k),\n    // r\n    m >= 1 ? 0 : 255 * (1 - m) * (1 - k),\n    // g\n    y >= 1 ? 0 : 255 * (1 - y) * (1 - k),\n    // b\n    alpha];\n  };\n  var cmyk2rgb_1 = cmyk2rgb;\n  var unpack$3 = utils.unpack;\n  var type$2 = utils.type;\n  Color_1.prototype.cmyk = function () {\n    return rgb2cmyk_1(this._rgb);\n  };\n  chroma_1.cmyk = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['cmyk'])))();\n  };\n  input.format.cmyk = cmyk2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      args = unpack$3(args, 'cmyk');\n      if (type$2(args) === 'array' && args.length === 4) {\n        return 'cmyk';\n      }\n    }\n  });\n  var unpack$4 = utils.unpack;\n  var last$2 = utils.last;\n  var rnd = function rnd(a) {\n    return Math.round(a * 100) / 100;\n  };\n\n  /*\n   * supported arguments:\n   * - hsl2css(h,s,l)\n   * - hsl2css(h,s,l,a)\n   * - hsl2css([h,s,l], mode)\n   * - hsl2css([h,s,l,a], mode)\n   * - hsl2css({h,s,l,a}, mode)\n   */\n  var hsl2css = function hsl2css() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var hsla = unpack$4(args, 'hsla');\n    var mode = last$2(args) || 'lsa';\n    hsla[0] = rnd(hsla[0] || 0);\n    hsla[1] = rnd(hsla[1] * 100) + '%';\n    hsla[2] = rnd(hsla[2] * 100) + '%';\n    if (mode === 'hsla' || hsla.length > 3 && hsla[3] < 1) {\n      hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n      mode = 'hsla';\n    } else {\n      hsla.length = 3;\n    }\n    return mode + \"(\" + hsla.join(',') + \")\";\n  };\n  var hsl2css_1 = hsl2css;\n  var unpack$5 = utils.unpack;\n\n  /*\n   * supported arguments:\n   * - rgb2hsl(r,g,b)\n   * - rgb2hsl(r,g,b,a)\n   * - rgb2hsl([r,g,b])\n   * - rgb2hsl([r,g,b,a])\n   * - rgb2hsl({r,g,b,a})\n   */\n  var rgb2hsl = function rgb2hsl() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$5(args, 'rgba');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var l = (max + min) / 2;\n    var s, h;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r == max) {\n      h = (g - b) / (max - min);\n    } else if (g == max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b == max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    if (args.length > 3 && args[3] !== undefined) {\n      return [h, s, l, args[3]];\n    }\n    return [h, s, l];\n  };\n  var rgb2hsl_1 = rgb2hsl;\n  var unpack$6 = utils.unpack;\n  var last$3 = utils.last;\n  var round = Math.round;\n\n  /*\n   * supported arguments:\n   * - rgb2css(r,g,b)\n   * - rgb2css(r,g,b,a)\n   * - rgb2css([r,g,b], mode)\n   * - rgb2css([r,g,b,a], mode)\n   * - rgb2css({r,g,b,a}, mode)\n   */\n  var rgb2css = function rgb2css() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var rgba = unpack$6(args, 'rgba');\n    var mode = last$3(args) || 'rgb';\n    if (mode.substr(0, 3) == 'hsl') {\n      return hsl2css_1(rgb2hsl_1(rgba), mode);\n    }\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n    if (mode === 'rgba' || rgba.length > 3 && rgba[3] < 1) {\n      rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n      mode = 'rgba';\n    }\n    return mode + \"(\" + rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',') + \")\";\n  };\n  var rgb2css_1 = rgb2css;\n  var unpack$7 = utils.unpack;\n  var round$1 = Math.round;\n  var hsl2rgb = function hsl2rgb() {\n    var assign;\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$7(args, 'hsl');\n    var h = args[0];\n    var s = args[1];\n    var l = args[2];\n    var r, g, b;\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      var t3 = [0, 0, 0];\n      var c = [0, 0, 0];\n      var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var t1 = 2 * l - t2;\n      var h_ = h / 360;\n      t3[0] = h_ + 1 / 3;\n      t3[1] = h_;\n      t3[2] = h_ - 1 / 3;\n      for (var i = 0; i < 3; i++) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      assign = [round$1(c[0] * 255), round$1(c[1] * 255), round$1(c[2] * 255)], r = assign[0], g = assign[1], b = assign[2];\n    }\n    if (args.length > 3) {\n      // keep alpha channel\n      return [r, g, b, args[3]];\n    }\n    return [r, g, b, 1];\n  };\n  var hsl2rgb_1 = hsl2rgb;\n  var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n  var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var round$2 = Math.round;\n  var css2rgb = function css2rgb(css) {\n    css = css.toLowerCase().trim();\n    var m;\n    if (input.format.named) {\n      try {\n        return input.format.named(css);\n      } catch (e) {\n        // eslint-disable-next-line\n      }\n    }\n\n    // rgb(250,20,0)\n    if (m = css.match(RE_RGB)) {\n      var rgb = m.slice(1, 4);\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1; // default alpha\n      return rgb;\n    }\n\n    // rgba(250,20,0,0.4)\n    if (m = css.match(RE_RGBA)) {\n      var rgb$1 = m.slice(1, 5);\n      for (var i$1 = 0; i$1 < 4; i$1++) {\n        rgb$1[i$1] = +rgb$1[i$1];\n      }\n      return rgb$1;\n    }\n\n    // rgb(100%,0%,0%)\n    if (m = css.match(RE_RGB_PCT)) {\n      var rgb$2 = m.slice(1, 4);\n      for (var i$2 = 0; i$2 < 3; i$2++) {\n        rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n      }\n      rgb$2[3] = 1; // default alpha\n      return rgb$2;\n    }\n\n    // rgba(100%,0%,0%,0.4)\n    if (m = css.match(RE_RGBA_PCT)) {\n      var rgb$3 = m.slice(1, 5);\n      for (var i$3 = 0; i$3 < 3; i$3++) {\n        rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n      }\n      rgb$3[3] = +rgb$3[3];\n      return rgb$3;\n    }\n\n    // hsl(0,100%,50%)\n    if (m = css.match(RE_HSL)) {\n      var hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      var rgb$4 = hsl2rgb_1(hsl);\n      rgb$4[3] = 1;\n      return rgb$4;\n    }\n\n    // hsla(0,100%,50%,0.5)\n    if (m = css.match(RE_HSLA)) {\n      var hsl$1 = m.slice(1, 4);\n      hsl$1[1] *= 0.01;\n      hsl$1[2] *= 0.01;\n      var rgb$5 = hsl2rgb_1(hsl$1);\n      rgb$5[3] = +m[4]; // default alpha = 1\n      return rgb$5;\n    }\n  };\n  css2rgb.test = function (s) {\n    return RE_RGB.test(s) || RE_RGBA.test(s) || RE_RGB_PCT.test(s) || RE_RGBA_PCT.test(s) || RE_HSL.test(s) || RE_HSLA.test(s);\n  };\n  var css2rgb_1 = css2rgb;\n  var type$3 = utils.type;\n  Color_1.prototype.css = function (mode) {\n    return rgb2css_1(this._rgb, mode);\n  };\n  chroma_1.css = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['css'])))();\n  };\n  input.format.css = css2rgb_1;\n  input.autodetect.push({\n    p: 5,\n    test: function test(h) {\n      var rest = [],\n        len = arguments.length - 1;\n      while (len-- > 0) rest[len] = arguments[len + 1];\n      if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n        return 'css';\n      }\n    }\n  });\n  var unpack$8 = utils.unpack;\n  input.format.gl = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var rgb = unpack$8(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n  };\n  chroma_1.gl = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['gl'])))();\n  };\n  Color_1.prototype.gl = function () {\n    var rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n  var unpack$9 = utils.unpack;\n  var rgb2hcg = function rgb2hcg() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var ref = unpack$9(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var c = delta * 100 / 255;\n    var _g = min / (255 - delta) * 100;\n    var h;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n  var rgb2hcg_1 = rgb2hcg;\n  var unpack$a = utils.unpack;\n  var floor = Math.floor;\n\n  /*\n   * this is basically just HSV with some minor tweaks\n   *\n   * hue.. [0..360]\n   * chroma .. [0..1]\n   * grayness .. [0..1]\n   */\n\n  var hcg2rgb = function hcg2rgb() {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$a(args, 'hcg');\n    var h = args[0];\n    var c = args[1];\n    var _g = args[2];\n    var r, g, b;\n    _g = _g * 255;\n    var _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      var i = floor(h);\n      var f = h - i;\n      var p = _g * (1 - c);\n      var q = p + _c * (1 - f);\n      var t = p + _c * f;\n      var v = p + _c;\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n  var hcg2rgb_1 = hcg2rgb;\n  var unpack$b = utils.unpack;\n  var type$4 = utils.type;\n  Color_1.prototype.hcg = function () {\n    return rgb2hcg_1(this._rgb);\n  };\n  chroma_1.hcg = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hcg'])))();\n  };\n  input.format.hcg = hcg2rgb_1;\n  input.autodetect.push({\n    p: 1,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      args = unpack$b(args, 'hcg');\n      if (type$4(args) === 'array' && args.length === 3) {\n        return 'hcg';\n      }\n    }\n  });\n  var unpack$c = utils.unpack;\n  var last$4 = utils.last;\n  var round$3 = Math.round;\n  var rgb2hex = function rgb2hex() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var ref = unpack$c(args, 'rgba');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n    var mode = last$4(args) || 'auto';\n    if (a === undefined) {\n      a = 1;\n    }\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = round$3(r);\n    g = round$3(g);\n    b = round$3(b);\n    var u = r << 16 | g << 8 | b;\n    var str = \"000000\" + u.toString(16); //#.toUpperCase();\n    str = str.substr(str.length - 6);\n    var hxa = '0' + round$3(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    switch (mode.toLowerCase()) {\n      case 'rgba':\n        return \"#\" + str + hxa;\n      case 'argb':\n        return \"#\" + hxa + str;\n      default:\n        return \"#\" + str;\n    }\n  };\n  var rgb2hex_1 = rgb2hex;\n  var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n  var hex2rgb = function hex2rgb(hex) {\n    if (hex.match(RE_HEX)) {\n      // remove optional leading #\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      // expand short-notation to full six-digit\n      if (hex.length === 3) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      var u = parseInt(hex, 16);\n      var r = u >> 16;\n      var g = u >> 8 & 0xFF;\n      var b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    // match rgba hex format, eg #FF000077\n    if (hex.match(RE_HEXA)) {\n      if (hex.length === 5 || hex.length === 9) {\n        // remove optional leading #\n        hex = hex.substr(1);\n      }\n      // expand short-notation to full eight-digit\n      if (hex.length === 4) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n      }\n      var u$1 = parseInt(hex, 16);\n      var r$1 = u$1 >> 24 & 0xFF;\n      var g$1 = u$1 >> 16 & 0xFF;\n      var b$1 = u$1 >> 8 & 0xFF;\n      var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n      return [r$1, g$1, b$1, a];\n    }\n\n    // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n    throw new Error(\"unknown hex color: \" + hex);\n  };\n  var hex2rgb_1 = hex2rgb;\n  var type$5 = utils.type;\n  Color_1.prototype.hex = function (mode) {\n    return rgb2hex_1(this._rgb, mode);\n  };\n  chroma_1.hex = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hex'])))();\n  };\n  input.format.hex = hex2rgb_1;\n  input.autodetect.push({\n    p: 4,\n    test: function test(h) {\n      var rest = [],\n        len = arguments.length - 1;\n      while (len-- > 0) rest[len] = arguments[len + 1];\n      if (!rest.length && type$5(h) === 'string' && [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0) {\n        return 'hex';\n      }\n    }\n  });\n  var unpack$d = utils.unpack;\n  var TWOPI = utils.TWOPI;\n  var min = Math.min;\n  var sqrt = Math.sqrt;\n  var acos = Math.acos;\n  var rgb2hsi = function rgb2hsi() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n    var ref = unpack$d(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var h;\n    var min_ = min(r, g, b);\n    var i = (r + g + b) / 3;\n    var s = i > 0 ? 1 - min_ / i : 0;\n    if (s === 0) {\n      h = NaN;\n    } else {\n      h = (r - g + (r - b)) / 2;\n      h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n  var rgb2hsi_1 = rgb2hsi;\n  var unpack$e = utils.unpack;\n  var limit$1 = utils.limit;\n  var TWOPI$1 = utils.TWOPI;\n  var PITHIRD = utils.PITHIRD;\n  var cos = Math.cos;\n\n  /*\n   * hue [0..360]\n   * saturation [0..1]\n   * intensity [0..1]\n   */\n  var hsi2rgb = function hsi2rgb() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n    args = unpack$e(args, 'hsi');\n    var h = args[0];\n    var s = args[1];\n    var i = args[2];\n    var r, g, b;\n    if (isNaN(h)) {\n      h = 0;\n    }\n    if (isNaN(s)) {\n      s = 0;\n    }\n    // normalize hue\n    if (h > 360) {\n      h -= 360;\n    }\n    if (h < 0) {\n      h += 360;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI$1 * h) / cos(PITHIRD - TWOPI$1 * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit$1(i * r * 3);\n    g = limit$1(i * g * 3);\n    b = limit$1(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n  var hsi2rgb_1 = hsi2rgb;\n  var unpack$f = utils.unpack;\n  var type$6 = utils.type;\n  Color_1.prototype.hsi = function () {\n    return rgb2hsi_1(this._rgb);\n  };\n  chroma_1.hsi = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsi'])))();\n  };\n  input.format.hsi = hsi2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      args = unpack$f(args, 'hsi');\n      if (type$6(args) === 'array' && args.length === 3) {\n        return 'hsi';\n      }\n    }\n  });\n  var unpack$g = utils.unpack;\n  var type$7 = utils.type;\n  Color_1.prototype.hsl = function () {\n    return rgb2hsl_1(this._rgb);\n  };\n  chroma_1.hsl = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsl'])))();\n  };\n  input.format.hsl = hsl2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      args = unpack$g(args, 'hsl');\n      if (type$7(args) === 'array' && args.length === 3) {\n        return 'hsl';\n      }\n    }\n  });\n  var unpack$h = utils.unpack;\n  var min$1 = Math.min;\n  var max$1 = Math.max;\n\n  /*\n   * supported arguments:\n   * - rgb2hsv(r,g,b)\n   * - rgb2hsv([r,g,b])\n   * - rgb2hsv({r,g,b})\n   */\n  var rgb2hsl$1 = function rgb2hsl$1() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$h(args, 'rgb');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var min_ = min$1(r, g, b);\n    var max_ = max$1(r, g, b);\n    var delta = max_ - min_;\n    var h, s, v;\n    v = max_ / 255.0;\n    if (max_ === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max_;\n      if (r === max_) {\n        h = (g - b) / delta;\n      }\n      if (g === max_) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max_) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n  var rgb2hsv = rgb2hsl$1;\n  var unpack$i = utils.unpack;\n  var floor$1 = Math.floor;\n  var hsv2rgb = function hsv2rgb() {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$i(args, 'hsv');\n    var h = args[0];\n    var s = args[1];\n    var v = args[2];\n    var r, g, b;\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      var i = floor$1(h);\n      var f = h - i;\n      var p = v * (1 - s);\n      var q = v * (1 - s * f);\n      var t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];\n          break;\n        case 1:\n          assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];\n          break;\n        case 2:\n          assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];\n          break;\n        case 3:\n          assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];\n          break;\n        case 4:\n          assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];\n          break;\n        case 5:\n          assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];\n          break;\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n  var hsv2rgb_1 = hsv2rgb;\n  var unpack$j = utils.unpack;\n  var type$8 = utils.type;\n  Color_1.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n  };\n  chroma_1.hsv = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hsv'])))();\n  };\n  input.format.hsv = hsv2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      args = unpack$j(args, 'hsv');\n      if (type$8(args) === 'array' && args.length === 3) {\n        return 'hsv';\n      }\n    }\n  });\n  var labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n    // D65 standard referent\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    // 4 / 29\n    t1: 0.206896552,\n    // 6 / 29\n    t2: 0.12841855,\n    // 3 * t1 * t1\n    t3: 0.008856452 // t1 * t1 * t1\n  };\n\n  var unpack$k = utils.unpack;\n  var pow = Math.pow;\n  var rgb2lab = function rgb2lab() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var ref = unpack$k(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2xyz(r, g, b);\n    var x = ref$1[0];\n    var y = ref$1[1];\n    var z = ref$1[2];\n    var l = 116 * y - 16;\n    return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n  };\n  var rgb_xyz = function rgb_xyz(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    }\n    return pow((r + 0.055) / 1.055, 2.4);\n  };\n  var xyz_lab = function xyz_lab(t) {\n    if (t > labConstants.t3) {\n      return pow(t, 1 / 3);\n    }\n    return t / labConstants.t2 + labConstants.t0;\n  };\n  var rgb2xyz = function rgb2xyz(r, g, b) {\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n    var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n    var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n    return [x, y, z];\n  };\n  var rgb2lab_1 = rgb2lab;\n  var unpack$l = utils.unpack;\n  var pow$1 = Math.pow;\n\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n  var lab2rgb = function lab2rgb() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$l(args, 'lab');\n    var l = args[0];\n    var a = args[1];\n    var b = args[2];\n    var x, y, z, r, g, b_;\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = labConstants.Yn * lab_xyz(y);\n    x = labConstants.Xn * lab_xyz(x);\n    z = labConstants.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n  };\n  var xyz_rgb = function xyz_rgb(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055);\n  };\n  var lab_xyz = function lab_xyz(t) {\n    return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0);\n  };\n  var lab2rgb_1 = lab2rgb;\n  var unpack$m = utils.unpack;\n  var type$9 = utils.type;\n  Color_1.prototype.lab = function () {\n    return rgb2lab_1(this._rgb);\n  };\n  chroma_1.lab = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['lab'])))();\n  };\n  input.format.lab = lab2rgb_1;\n  input.autodetect.push({\n    p: 2,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      args = unpack$m(args, 'lab');\n      if (type$9(args) === 'array' && args.length === 3) {\n        return 'lab';\n      }\n    }\n  });\n  var unpack$n = utils.unpack;\n  var RAD2DEG = utils.RAD2DEG;\n  var sqrt$1 = Math.sqrt;\n  var atan2 = Math.atan2;\n  var round$4 = Math.round;\n  var lab2lch = function lab2lch() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var ref = unpack$n(args, 'lab');\n    var l = ref[0];\n    var a = ref[1];\n    var b = ref[2];\n    var c = sqrt$1(a * a + b * b);\n    var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round$4(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n  var lab2lch_1 = lab2lch;\n  var unpack$o = utils.unpack;\n  var rgb2lch = function rgb2lch() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var ref = unpack$o(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2lab_1(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch_1(l, a, b_);\n  };\n  var rgb2lch_1 = rgb2lch;\n  var unpack$p = utils.unpack;\n  var DEG2RAD = utils.DEG2RAD;\n  var sin = Math.sin;\n  var cos$1 = Math.cos;\n  var lch2lab = function lch2lab() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n     A saturation multiplier was added by Gregor Aisch\n    */\n    var ref = unpack$p(args, 'lch');\n    var l = ref[0];\n    var c = ref[1];\n    var h = ref[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h = h * DEG2RAD;\n    return [l, cos$1(h) * c, sin(h) * c];\n  };\n  var lch2lab_1 = lch2lab;\n  var unpack$q = utils.unpack;\n  var lch2rgb = function lch2rgb() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$q(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab_1(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = lab2rgb_1(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n  var lch2rgb_1 = lch2rgb;\n  var unpack$r = utils.unpack;\n  var hcl2rgb = function hcl2rgb() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var hcl = unpack$r(args, 'hcl').reverse();\n    return lch2rgb_1.apply(void 0, hcl);\n  };\n  var hcl2rgb_1 = hcl2rgb;\n  var unpack$s = utils.unpack;\n  var type$a = utils.type;\n  Color_1.prototype.lch = function () {\n    return rgb2lch_1(this._rgb);\n  };\n  Color_1.prototype.hcl = function () {\n    return rgb2lch_1(this._rgb).reverse();\n  };\n  chroma_1.lch = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['lch'])))();\n  };\n  chroma_1.hcl = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['hcl'])))();\n  };\n  input.format.lch = lch2rgb_1;\n  input.format.hcl = hcl2rgb_1;\n  ['lch', 'hcl'].forEach(function (m) {\n    return input.autodetect.push({\n      p: 2,\n      test: function test() {\n        var args = [],\n          len = arguments.length;\n        while (len--) args[len] = arguments[len];\n        args = unpack$s(args, m);\n        if (type$a(args) === 'array' && args.length === 3) {\n          return m;\n        }\n      }\n    });\n  });\n\n  /**\n  \tX11 color names\n   \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n  var w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n  var w3cx11_1 = w3cx11;\n  var type$b = utils.type;\n  Color_1.prototype.name = function () {\n    var hex = rgb2hex_1(this._rgb, 'rgb');\n    for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n      var n = list[i];\n      if (w3cx11_1[n] === hex) {\n        return n.toLowerCase();\n      }\n    }\n    return hex;\n  };\n  input.format.named = function (name) {\n    name = name.toLowerCase();\n    if (w3cx11_1[name]) {\n      return hex2rgb_1(w3cx11_1[name]);\n    }\n    throw new Error('unknown color name: ' + name);\n  };\n  input.autodetect.push({\n    p: 5,\n    test: function test(h) {\n      var rest = [],\n        len = arguments.length - 1;\n      while (len-- > 0) rest[len] = arguments[len + 1];\n      if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n        return 'named';\n      }\n    }\n  });\n  var unpack$t = utils.unpack;\n  var rgb2num = function rgb2num() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var ref = unpack$t(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n  var rgb2num_1 = rgb2num;\n  var type$c = utils.type;\n  var num2rgb = function num2rgb(num) {\n    if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      var r = num >> 16;\n      var g = num >> 8 & 0xFF;\n      var b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    throw new Error(\"unknown num color: \" + num);\n  };\n  var num2rgb_1 = num2rgb;\n  var type$d = utils.type;\n  Color_1.prototype.num = function () {\n    return rgb2num_1(this._rgb);\n  };\n  chroma_1.num = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['num'])))();\n  };\n  input.format.num = num2rgb_1;\n  input.autodetect.push({\n    p: 5,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n  var unpack$u = utils.unpack;\n  var type$e = utils.type;\n  var round$5 = Math.round;\n  Color_1.prototype.rgb = function (rnd) {\n    if (rnd === void 0) rnd = true;\n    if (rnd === false) {\n      return this._rgb.slice(0, 3);\n    }\n    return this._rgb.slice(0, 3).map(round$5);\n  };\n  Color_1.prototype.rgba = function (rnd) {\n    if (rnd === void 0) rnd = true;\n    return this._rgb.slice(0, 4).map(function (v, i) {\n      return i < 3 ? rnd === false ? v : round$5(v) : v;\n    });\n  };\n  chroma_1.rgb = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['rgb'])))();\n  };\n  input.format.rgb = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var rgba = unpack$u(args, 'rgba');\n    if (rgba[3] === undefined) {\n      rgba[3] = 1;\n    }\n    return rgba;\n  };\n  input.autodetect.push({\n    p: 3,\n    test: function test() {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      args = unpack$u(args, 'rgba');\n      if (type$e(args) === 'array' && (args.length === 3 || args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n        return 'rgb';\n      }\n    }\n  });\n\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   */\n\n  var log = Math.log;\n  var temperature2rgb = function temperature2rgb(kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b, 1];\n  };\n  var temperature2rgb_1 = temperature2rgb;\n\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   **/\n\n  var unpack$v = utils.unpack;\n  var round$6 = Math.round;\n  var rgb2temperature = function rgb2temperature() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    var rgb = unpack$v(args, 'rgb');\n    var r = rgb[0],\n      b = rgb[2];\n    var minTemp = 1000;\n    var maxTemp = 40000;\n    var eps = 0.4;\n    var temp;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      var rgb$1 = temperature2rgb_1(temp);\n      if (rgb$1[2] / rgb$1[0] >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round$6(temp);\n  };\n  var rgb2temperature_1 = rgb2temperature;\n  Color_1.prototype.temp = Color_1.prototype.kelvin = Color_1.prototype.temperature = function () {\n    return rgb2temperature_1(this._rgb);\n  };\n  chroma_1.temp = chroma_1.kelvin = chroma_1.temperature = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return new (Function.prototype.bind.apply(Color_1, [null].concat(args, ['temp'])))();\n  };\n  input.format.temp = input.format.kelvin = input.format.temperature = temperature2rgb_1;\n  var type$f = utils.type;\n  Color_1.prototype.alpha = function (a, mutate) {\n    if (mutate === void 0) mutate = false;\n    if (a !== undefined && type$f(a) === 'number') {\n      if (mutate) {\n        this._rgb[3] = a;\n        return this;\n      }\n      return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n    return this._rgb[3];\n  };\n  Color_1.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n  };\n  Color_1.prototype.darken = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lab = me.lab();\n    lab[0] -= labConstants.Kn * amount;\n    return new Color_1(lab, 'lab').alpha(me.alpha(), true);\n  };\n  Color_1.prototype.brighten = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.darken(-amount);\n  };\n  Color_1.prototype.darker = Color_1.prototype.darken;\n  Color_1.prototype.brighter = Color_1.prototype.brighten;\n  Color_1.prototype.get = function (mc) {\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n    if (channel) {\n      var i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      }\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n  var type$g = utils.type;\n  var pow$2 = Math.pow;\n  var EPS = 1e-7;\n  var MAX_ITER = 20;\n  Color_1.prototype.luminance = function (lum) {\n    if (lum !== undefined && type$g(lum) === 'number') {\n      if (lum === 0) {\n        // return pure black\n        return new Color_1([0, 0, 0, this._rgb[3]], 'rgb');\n      }\n      if (lum === 1) {\n        // return pure white\n        return new Color_1([255, 255, 255, this._rgb[3]], 'rgb');\n      }\n      // compute new color using...\n      var cur_lum = this.luminance();\n      var mode = 'rgb';\n      var max_iter = MAX_ITER;\n      var test = function test(low, high) {\n        var mid = low.interpolate(high, 0.5, mode);\n        var lm = mid.luminance();\n        if (Math.abs(lum - lm) < EPS || !max_iter--) {\n          // close enough\n          return mid;\n        }\n        return lm > lum ? test(low, mid) : test(mid, high);\n      };\n      var rgb = (cur_lum > lum ? test(new Color_1([0, 0, 0]), this) : test(this, new Color_1([255, 255, 255]))).rgb();\n      return new Color_1(rgb.concat([this._rgb[3]]));\n    }\n    return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));\n  };\n  var rgb2luminance = function rgb2luminance(r, g, b) {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n  var luminance_x = function luminance_x(x) {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow$2((x + 0.055) / 1.055, 2.4);\n  };\n  var interpolator = {};\n  var type$h = utils.type;\n  var mix = function mix(col1, col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n      len = arguments.length - 3;\n    while (len-- > 0) rest[len] = arguments[len + 3];\n    var mode = rest[0] || 'lrgb';\n    if (!interpolator[mode] && !rest.length) {\n      // fall back to the first supported mode\n      mode = Object.keys(interpolator)[0];\n    }\n    if (!interpolator[mode]) {\n      throw new Error(\"interpolation mode \" + mode + \" is not defined\");\n    }\n    if (type$h(col1) !== 'object') {\n      col1 = new Color_1(col1);\n    }\n    if (type$h(col2) !== 'object') {\n      col2 = new Color_1(col2);\n    }\n    return interpolator[mode](col1, col2, f).alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n  Color_1.prototype.mix = Color_1.prototype.interpolate = function (col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],\n      len = arguments.length - 2;\n    while (len-- > 0) rest[len] = arguments[len + 2];\n    return mix.apply(void 0, [this, col2, f].concat(rest));\n  };\n  Color_1.prototype.premultiply = function (mutate) {\n    if (mutate === void 0) mutate = false;\n    var rgb = this._rgb;\n    var a = rgb[3];\n    if (mutate) {\n      this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n      return this;\n    } else {\n      return new Color_1([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n  };\n  Color_1.prototype.saturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    var me = this;\n    var lch = me.lch();\n    lch[1] += labConstants.Kn * amount;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return new Color_1(lch, 'lch').alpha(me.alpha(), true);\n  };\n  Color_1.prototype.desaturate = function (amount) {\n    if (amount === void 0) amount = 1;\n    return this.saturate(-amount);\n  };\n  var type$i = utils.type;\n  Color_1.prototype.set = function (mc, value, mutate) {\n    if (mutate === void 0) mutate = false;\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n    if (channel) {\n      var i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type$i(value) == 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +value.substr(1);\n              break;\n            case '/':\n              src[i] /= +value.substr(1);\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else if (type$i(value) === 'number') {\n          src[i] = value;\n        } else {\n          throw new Error(\"unsupported value for Color.set\");\n        }\n        var out = new Color_1(src, mode);\n        if (mutate) {\n          this._rgb = out._rgb;\n          return this;\n        }\n        return out;\n      }\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n  var rgb$1 = function rgb$1(col1, col2, f) {\n    var xyz0 = col1._rgb;\n    var xyz1 = col2._rgb;\n    return new Color_1(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'rgb');\n  };\n\n  // register interpolator\n  interpolator.rgb = rgb$1;\n  var sqrt$2 = Math.sqrt;\n  var pow$3 = Math.pow;\n  var lrgb = function lrgb(col1, col2, f) {\n    var ref = col1._rgb;\n    var x1 = ref[0];\n    var y1 = ref[1];\n    var z1 = ref[2];\n    var ref$1 = col2._rgb;\n    var x2 = ref$1[0];\n    var y2 = ref$1[1];\n    var z2 = ref$1[2];\n    return new Color_1(sqrt$2(pow$3(x1, 2) * (1 - f) + pow$3(x2, 2) * f), sqrt$2(pow$3(y1, 2) * (1 - f) + pow$3(y2, 2) * f), sqrt$2(pow$3(z1, 2) * (1 - f) + pow$3(z2, 2) * f), 'rgb');\n  };\n\n  // register interpolator\n  interpolator.lrgb = lrgb;\n  var lab$1 = function lab$1(col1, col2, f) {\n    var xyz0 = col1.lab();\n    var xyz1 = col2.lab();\n    return new Color_1(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'lab');\n  };\n\n  // register interpolator\n  interpolator.lab = lab$1;\n  var _hsx = function _hsx(col1, col2, f, m) {\n    var assign, assign$1;\n    var xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    var hue0, hue1, sat0, sat1, lbv0, lbv1;\n    if (m.substr(0, 1) === 'h') {\n      assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2];\n      assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2];\n    }\n    var sat, hue, lbv, dh;\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      // both colors have hue\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat === undefined) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return new Color_1([hue, sat, lbv], m);\n  };\n  var lch$1 = function lch$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'lch');\n  };\n\n  // register interpolator\n  interpolator.lch = lch$1;\n  interpolator.hcl = lch$1;\n  var num$1 = function num$1(col1, col2, f) {\n    var c1 = col1.num();\n    var c2 = col2.num();\n    return new Color_1(c1 + f * (c2 - c1), 'num');\n  };\n\n  // register interpolator\n  interpolator.num = num$1;\n  var hcg$1 = function hcg$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hcg');\n  };\n\n  // register interpolator\n  interpolator.hcg = hcg$1;\n  var hsi$1 = function hsi$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsi');\n  };\n\n  // register interpolator\n  interpolator.hsi = hsi$1;\n  var hsl$1 = function hsl$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsl');\n  };\n\n  // register interpolator\n  interpolator.hsl = hsl$1;\n  var hsv$1 = function hsv$1(col1, col2, f) {\n    return _hsx(col1, col2, f, 'hsv');\n  };\n\n  // register interpolator\n  interpolator.hsv = hsv$1;\n  var clip_rgb$2 = utils.clip_rgb;\n  var pow$4 = Math.pow;\n  var sqrt$3 = Math.sqrt;\n  var PI$1 = Math.PI;\n  var cos$2 = Math.cos;\n  var sin$1 = Math.sin;\n  var atan2$1 = Math.atan2;\n  var average = function average(colors, mode, weights) {\n    if (mode === void 0) mode = 'lrgb';\n    if (weights === void 0) weights = null;\n    var l = colors.length;\n    if (!weights) {\n      weights = Array.from(new Array(l)).map(function () {\n        return 1;\n      });\n    }\n    // normalize weights\n    var k = l / weights.reduce(function (a, b) {\n      return a + b;\n    });\n    weights.forEach(function (w, i) {\n      weights[i] *= k;\n    });\n    // convert colors to Color objects\n    colors = colors.map(function (c) {\n      return new Color_1(c);\n    });\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors, weights);\n    }\n    var first = colors.shift();\n    var xyz = first.get(mode);\n    var cnt = [];\n    var dx = 0;\n    var dy = 0;\n    // initial color\n    for (var i = 0; i < xyz.length; i++) {\n      xyz[i] = (xyz[i] || 0) * weights[0];\n      cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        var A = xyz[i] / 180 * PI$1;\n        dx += cos$2(A) * weights[0];\n        dy += sin$1(A) * weights[0];\n      }\n    }\n    var alpha = first.alpha() * weights[0];\n    colors.forEach(function (c, ci) {\n      var xyz2 = c.get(mode);\n      alpha += c.alpha() * weights[ci + 1];\n      for (var i = 0; i < xyz.length; i++) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += weights[ci + 1];\n          if (mode.charAt(i) === 'h') {\n            var A = xyz2[i] / 180 * PI$1;\n            dx += cos$2(A) * weights[ci + 1];\n            dy += sin$1(A) * weights[ci + 1];\n          } else {\n            xyz[i] += xyz2[i] * weights[ci + 1];\n          }\n        }\n      }\n    });\n    for (var i$1 = 0; i$1 < xyz.length; i$1++) {\n      if (mode.charAt(i$1) === 'h') {\n        var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n        while (A$1 < 0) {\n          A$1 += 360;\n        }\n        while (A$1 >= 360) {\n          A$1 -= 360;\n        }\n        xyz[i$1] = A$1;\n      } else {\n        xyz[i$1] = xyz[i$1] / cnt[i$1];\n      }\n    }\n    alpha /= l;\n    return new Color_1(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n  };\n  var _average_lrgb = function _average_lrgb(colors, weights) {\n    var l = colors.length;\n    var xyz = [0, 0, 0, 0];\n    for (var i = 0; i < colors.length; i++) {\n      var col = colors[i];\n      var f = weights[i] / l;\n      var rgb = col._rgb;\n      xyz[0] += pow$4(rgb[0], 2) * f;\n      xyz[1] += pow$4(rgb[1], 2) * f;\n      xyz[2] += pow$4(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt$3(xyz[0]);\n    xyz[1] = sqrt$3(xyz[1]);\n    xyz[2] = sqrt$3(xyz[2]);\n    if (xyz[3] > 0.9999999) {\n      xyz[3] = 1;\n    }\n    return new Color_1(clip_rgb$2(xyz));\n  };\n\n  // minimal multi-purpose interface\n\n  // @requires utils color analyze\n\n  var type$j = utils.type;\n  var pow$5 = Math.pow;\n  var scale = function scale(colors) {\n    // constructor\n    var _mode = 'rgb';\n    var _nacol = chroma_1('#ccc');\n    var _spread = 0;\n    // const _fixed = false;\n    var _domain = [0, 1];\n    var _pos = [];\n    var _padding = [0, 0];\n    var _classes = false;\n    var _colors = [];\n    var _out = false;\n    var _min = 0;\n    var _max = 1;\n    var _correctLightness = false;\n    var _colorCache = {};\n    var _useCache = true;\n    var _gamma = 1;\n\n    // private methods\n\n    var setColors = function setColors(colors) {\n      colors = colors || ['#fff', '#000'];\n      if (colors && type$j(colors) === 'string' && chroma_1.brewer && chroma_1.brewer[colors.toLowerCase()]) {\n        colors = chroma_1.brewer[colors.toLowerCase()];\n      }\n      if (type$j(colors) === 'array') {\n        // handle single color\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n        // make a copy of the colors\n        colors = colors.slice(0);\n        // convert to chroma classes\n        for (var c = 0; c < colors.length; c++) {\n          colors[c] = chroma_1(colors[c]);\n        }\n        // auto-fill color position\n        _pos.length = 0;\n        for (var c$1 = 0; c$1 < colors.length; c$1++) {\n          _pos.push(c$1 / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    var getClass = function getClass(value) {\n      if (_classes != null) {\n        var n = _classes.length - 1;\n        var i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    var tMapLightness = function tMapLightness(t) {\n      return t;\n    };\n    var tMapDomain = function tMapDomain(t) {\n      return t;\n    };\n\n    // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n    var getColor = function getColor(val, bypassMap) {\n      var col, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          // find the class\n          var c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          // just interpolate between min/max\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n\n      // domain map\n      t = tMapDomain(t);\n      if (!bypassMap) {\n        t = tMapLightness(t); // lightness correction\n      }\n\n      if (_gamma !== 1) {\n        t = pow$5(t, _gamma);\n      }\n      t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n      t = Math.min(1, Math.max(0, t));\n      var k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type$j(_colors) === 'array') {\n          //for i in [0.._pos.length-1]\n          for (var i = 0; i < _pos.length; i++) {\n            var p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma_1.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type$j(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    var resetCache = function resetCache() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n\n    // public interface\n\n    var f = function f(v) {\n      var c = chroma_1(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function (classes) {\n      if (classes != null) {\n        if (type$j(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          var d = chroma_1.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma_1.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function (domain) {\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      var k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        // update positions\n        for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n          var d = list[i];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (var c = 0; c < k; c++) {\n          _pos.push(c / (k - 1));\n        }\n        if (domain.length > 2) {\n          // set domain map\n          var tOut = domain.map(function (d, i) {\n            return i / (domain.length - 1);\n          });\n          var tBreaks = domain.map(function (d) {\n            return (d - _min) / (_max - _min);\n          });\n          if (!tBreaks.every(function (val, i) {\n            return tOut[i] === val;\n          })) {\n            tMapDomain = function tMapDomain(t) {\n              if (t <= 0 || t >= 1) {\n                return t;\n              }\n              var i = 0;\n              while (t >= tBreaks[i + 1]) {\n                i++;\n              }\n              var f = (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n              var out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n              return out;\n            };\n          }\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function (_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function (colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function (_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function (val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function (v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tMapLightness = function tMapLightness(t) {\n          var L0 = getColor(0, true).lab()[0];\n          var L1 = getColor(1, true).lab()[0];\n          var pol = L0 > L1;\n          var L_actual = getColor(t, true).lab()[0];\n          var L_ideal = L0 + (L1 - L0) * t;\n          var L_diff = L_actual - L_ideal;\n          var t0 = 0;\n          var t1 = 1;\n          var max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function () {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tMapLightness = function tMapLightness(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function (p) {\n      if (p != null) {\n        if (type$j(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function (numColors, out) {\n      // If no arguments are given, return the original colors that were provided\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      var result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        var dm = _domain[0];\n        var dd = _domain[1] - dm;\n        result = __range__(0, numColors, false).map(function (i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        // returns all colors based on the defined classes\n        colors = [];\n        var samples = [];\n        if (_classes && _classes.length > 2) {\n          for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function (v) {\n          return f(v);\n        });\n      }\n      if (chroma_1[out]) {\n        result = result.map(function (c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function (c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function (g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    f.nodata = function (d) {\n      if (d != null) {\n        _nacol = chroma_1(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n    return f;\n  };\n  function __range__(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n      range.push(i);\n    }\n    return range;\n  }\n\n  //\n  // interpolates between a set of colors uzing a bezier spline\n  //\n\n  // @requires utils lab\n\n  var bezier = function bezier(colors) {\n    var assign, assign$1, assign$2;\n    var I, lab0, lab1, lab2;\n    colors = colors.map(function (c) {\n      return new Color_1(c);\n    });\n    if (colors.length === 2) {\n      // linear interpolation\n      assign = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign[0], lab1 = assign[1];\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return lab0[i] + t * (lab1[i] - lab0[i]);\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 3) {\n      // quadratic bezier interpolation\n      assign$1 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2];\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i];\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 4) {\n      // cubic bezier interpolation\n      var lab3;\n      assign$2 = colors.map(function (c) {\n        return c.lab();\n      }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3];\n      I = function I(t) {\n        var lab = [0, 1, 2].map(function (i) {\n          return (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i];\n        });\n        return new Color_1(lab, 'lab');\n      };\n    } else if (colors.length === 5) {\n      var I0 = bezier(colors.slice(0, 3));\n      var I1 = bezier(colors.slice(2, 5));\n      I = function I(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n  var bezier_1 = function bezier_1(colors) {\n    var f = bezier(colors);\n    f.scale = function () {\n      return scale(f);\n    };\n    return f;\n  };\n\n  /*\n   * interpolates between a set of colors uzing a bezier spline\n   * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n   */\n\n  var blend = function blend(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw new Error('unknown blend mode ' + mode);\n    }\n    return blend[mode](bottom, top);\n  };\n  var blend_f = function blend_f(f) {\n    return function (bottom, top) {\n      var c0 = chroma_1(top).rgb();\n      var c1 = chroma_1(bottom).rgb();\n      return chroma_1.rgb(f(c0, c1));\n    };\n  };\n  var each = function each(f) {\n    return function (c0, c1) {\n      var out = [];\n      out[0] = f(c0[0], c1[0]);\n      out[1] = f(c0[1], c1[1]);\n      out[2] = f(c0[2], c1[2]);\n      return out;\n    };\n  };\n  var normal = function normal(a) {\n    return a;\n  };\n  var multiply = function multiply(a, b) {\n    return a * b / 255;\n  };\n  var darken$1 = function darken$1(a, b) {\n    return a > b ? b : a;\n  };\n  var lighten = function lighten(a, b) {\n    return a > b ? a : b;\n  };\n  var screen = function screen(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n  var overlay = function overlay(a, b) {\n    return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n  };\n  var burn = function burn(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n  var dodge = function dodge(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n  };\n\n  // # add = (a,b) ->\n  // #     if (a + b > 255) then 255 else a + b\n\n  blend.normal = blend_f(each(normal));\n  blend.multiply = blend_f(each(multiply));\n  blend.screen = blend_f(each(screen));\n  blend.overlay = blend_f(each(overlay));\n  blend.darken = blend_f(each(darken$1));\n  blend.lighten = blend_f(each(lighten));\n  blend.dodge = blend_f(each(dodge));\n  blend.burn = blend_f(each(burn));\n  // blend.add = blend_f(each(add));\n\n  var blend_1 = blend;\n\n  // cubehelix interpolation\n  // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n  // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n  var type$k = utils.type;\n  var clip_rgb$3 = utils.clip_rgb;\n  var TWOPI$2 = utils.TWOPI;\n  var pow$6 = Math.pow;\n  var sin$2 = Math.sin;\n  var cos$3 = Math.cos;\n  var cubehelix = function cubehelix(start, rotations, hue, gamma, lightness) {\n    if (start === void 0) start = 300;\n    if (rotations === void 0) rotations = -1.5;\n    if (hue === void 0) hue = 1;\n    if (gamma === void 0) gamma = 1;\n    if (lightness === void 0) lightness = [0, 1];\n    var dh = 0,\n      dl;\n    if (type$k(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    var f = function f(fract) {\n      var a = TWOPI$2 * ((start + 120) / 360 + rotations * fract);\n      var l = pow$6(lightness[0] + dl * fract, gamma);\n      var h = dh !== 0 ? hue[0] + fract * dh : hue;\n      var amp = h * l * (1 - l) / 2;\n      var cos_a = cos$3(a);\n      var sin_a = sin$2(a);\n      var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      var b = l + amp * (+1.97294 * cos_a);\n      return chroma_1(clip_rgb$3([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function (s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function (r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function (g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function (h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type$k(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function (h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type$k(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function () {\n      return chroma_1.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n  var digits = '0123456789abcdef';\n  var floor$2 = Math.floor;\n  var random = Math.random;\n  var random_1 = function random_1() {\n    var code = '#';\n    for (var i = 0; i < 6; i++) {\n      code += digits.charAt(floor$2(random() * 16));\n    }\n    return new Color_1(code, 'hex');\n  };\n  var log$1 = Math.log;\n  var pow$7 = Math.pow;\n  var floor$3 = Math.floor;\n  var abs = Math.abs;\n  var analyze = function analyze(data, key) {\n    if (key === void 0) key = null;\n    var r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (type(data) === 'object') {\n      data = Object.values(data);\n    }\n    data.forEach(function (val) {\n      if (key && type(val) === 'object') {\n        val = val[key];\n      }\n      if (val !== undefined && val !== null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    });\n    r.domain = [r.min, r.max];\n    r.limits = function (mode, num) {\n      return limits(r, mode, num);\n    };\n    return r;\n  };\n  var limits = function limits(data, mode, num) {\n    if (mode === void 0) mode = 'equal';\n    if (num === void 0) num = 7;\n    if (type(data) == 'array') {\n      data = analyze(data);\n    }\n    var min = data.min;\n    var max = data.max;\n    var values = data.values.sort(function (a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    var limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      // continuous\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      // equal interval\n      limits.push(min);\n      for (var i = 1; i < num; i++) {\n        limits.push(min + i / num * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      // log scale\n      if (min <= 0) {\n        throw new Error('Logarithmic scales are only possible for values > 0');\n      }\n      var min_log = Math.LOG10E * log$1(min);\n      var max_log = Math.LOG10E * log$1(max);\n      limits.push(min);\n      for (var i$1 = 1; i$1 < num; i$1++) {\n        limits.push(pow$7(10, min_log + i$1 / num * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      // quantile scale\n      limits.push(min);\n      for (var i$2 = 1; i$2 < num; i$2++) {\n        var p = (values.length - 1) * i$2 / num;\n        var pb = floor$3(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          // p > pb\n          var pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      // k-means clustering\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n      var cluster;\n      var n = values.length;\n      var assignments = new Array(n);\n      var clusterSizes = new Array(num);\n      var repeat = true;\n      var nb_iters = 0;\n      var centroids = null;\n\n      // get seed values\n      centroids = [];\n      centroids.push(min);\n      for (var i$3 = 1; i$3 < num; i$3++) {\n        centroids.push(min + i$3 / num * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        // assignment step\n        for (var j = 0; j < num; j++) {\n          clusterSizes[j] = 0;\n        }\n        for (var i$4 = 0; i$4 < n; i$4++) {\n          var value = values[i$4];\n          var mindist = Number.MAX_VALUE;\n          var best = void 0;\n          for (var j$1 = 0; j$1 < num; j$1++) {\n            var dist = abs(centroids[j$1] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j$1;\n            }\n            clusterSizes[best]++;\n            assignments[i$4] = best;\n          }\n        }\n\n        // update centroids step\n        var newCentroids = new Array(num);\n        for (var j$2 = 0; j$2 < num; j$2++) {\n          newCentroids[j$2] = null;\n        }\n        for (var i$5 = 0; i$5 < n; i$5++) {\n          cluster = assignments[i$5];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i$5];\n          } else {\n            newCentroids[cluster] += values[i$5];\n          }\n        }\n        for (var j$3 = 0; j$3 < num; j$3++) {\n          newCentroids[j$3] *= 1 / clusterSizes[j$3];\n        }\n\n        // check convergence\n        repeat = false;\n        for (var j$4 = 0; j$4 < num; j$4++) {\n          if (newCentroids[j$4] !== centroids[j$4]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n\n      // finished k-means clustering\n      // the next part is borrowed from gabrielflor.it\n      var kClusters = {};\n      for (var j$5 = 0; j$5 < num; j$5++) {\n        kClusters[j$5] = [];\n      }\n      for (var i$6 = 0; i$6 < n; i$6++) {\n        cluster = assignments[i$6];\n        kClusters[cluster].push(values[i$6]);\n      }\n      var tmpKMeansBreaks = [];\n      for (var j$6 = 0; j$6 < num; j$6++) {\n        tmpKMeansBreaks.push(kClusters[j$6][0]);\n        tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {\n        var v = tmpKMeansBreaks[i$7];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n  var analyze_1 = {\n    analyze: analyze,\n    limits: limits\n  };\n  var contrast = function contrast(a, b) {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var l1 = a.luminance();\n    var l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n  };\n  var sqrt$4 = Math.sqrt;\n  var atan2$2 = Math.atan2;\n  var abs$1 = Math.abs;\n  var cos$4 = Math.cos;\n  var PI$2 = Math.PI;\n  var deltaE = function deltaE(a, b, L, C) {\n    if (L === void 0) L = 1;\n    if (C === void 0) C = 1;\n\n    // Delta E (CMC)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var ref = Array.from(a.lab());\n    var L1 = ref[0];\n    var a1 = ref[1];\n    var b1 = ref[2];\n    var ref$1 = Array.from(b.lab());\n    var L2 = ref$1[0];\n    var a2 = ref$1[1];\n    var b2 = ref$1[2];\n    var c1 = sqrt$4(a1 * a1 + b1 * b1);\n    var c2 = sqrt$4(a2 * a2 + b2 * b2);\n    var sl = L1 < 16.0 ? 0.511 : 0.040975 * L1 / (1.0 + 0.01765 * L1);\n    var sc = 0.0638 * c1 / (1.0 + 0.0131 * c1) + 0.638;\n    var h1 = c1 < 0.000001 ? 0.0 : atan2$2(b1, a1) * 180.0 / PI$2;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    var t = h1 >= 164.0 && h1 <= 345.0 ? 0.56 + abs$1(0.2 * cos$4(PI$2 * (h1 + 168.0) / 180.0)) : 0.36 + abs$1(0.4 * cos$4(PI$2 * (h1 + 35.0) / 180.0));\n    var c4 = c1 * c1 * c1 * c1;\n    var f = sqrt$4(c4 / (c4 + 1900.0));\n    var sh = sc * (f * t + 1.0 - f);\n    var delL = L1 - L2;\n    var delC = c1 - c2;\n    var delA = a1 - a2;\n    var delB = b1 - b2;\n    var dH2 = delA * delA + delB * delB - delC * delC;\n    var v1 = delL / (L * sl);\n    var v2 = delC / (C * sc);\n    var v3 = sh;\n    return sqrt$4(v1 * v1 + v2 * v2 + dH2 / (v3 * v3));\n  };\n\n  // simple Euclidean distance\n  var distance = function distance(a, b, mode) {\n    if (mode === void 0) mode = 'lab';\n\n    // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n    a = new Color_1(a);\n    b = new Color_1(b);\n    var l1 = a.get(mode);\n    var l2 = b.get(mode);\n    var sum_sq = 0;\n    for (var i in l1) {\n      var d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n  var valid = function valid() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    try {\n      new (Function.prototype.bind.apply(Color_1, [null].concat(args)))();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  // some pre-defined color scales:\n\n  var scales = {\n    cool: function cool() {\n      return scale([chroma_1.hsl(180, 1, .9), chroma_1.hsl(250, .7, .4)]);\n    },\n    hot: function hot() {\n      return scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n    }\n  };\n\n  /**\n      ColorBrewer colors for chroma.js\n       Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n      Pennsylvania State University.\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n       Unless required by applicable law or agreed to in writing, software distributed\n      under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n      CONDITIONS OF ANY KIND, either express or implied. See the License for the\n      specific language governing permissions and limitations under the License.\n  */\n\n  var colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    // diverging\n\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    // qualitative\n\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  // add lowercase aliases for case-insensitive matches\n  for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n    var key = list$1[i$1];\n    colorbrewer[key.toLowerCase()] = colorbrewer[key];\n  }\n  var colorbrewer_1 = colorbrewer;\n\n  // feel free to comment out anything to rollup\n  // a smaller chroma.js built\n\n  // io --> convert colors\n\n  // operators --> modify existing Colors\n\n  // interpolators\n\n  // generators -- > create new colors\n  chroma_1.average = average;\n  chroma_1.bezier = bezier_1;\n  chroma_1.blend = blend_1;\n  chroma_1.cubehelix = cubehelix;\n  chroma_1.mix = chroma_1.interpolate = mix;\n  chroma_1.random = random_1;\n  chroma_1.scale = scale;\n\n  // other utility methods\n  chroma_1.analyze = analyze_1.analyze;\n  chroma_1.contrast = contrast;\n  chroma_1.deltaE = deltaE;\n  chroma_1.distance = distance;\n  chroma_1.limits = analyze_1.limits;\n  chroma_1.valid = valid;\n\n  // scale\n  chroma_1.scales = scales;\n\n  // colors\n  chroma_1.colors = w3cx11_1;\n  chroma_1.brewer = colorbrewer_1;\n  var chroma_js = chroma_1;\n  return chroma_js;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","chroma","limit","x","min","max","clip_rgb","rgb","_clipped","_unclipped","slice","i","classToType","list","length","name","toLowerCase","type","obj","Object","prototype","toString","call","unpack","args","keyOrder","Array","split","filter","k","undefined","map","last","l","PI","Math","utils","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","arguments","me","constructor","mode","sorted","sort","a","b","p","chk","test","apply","_rgb","Error","push","hex","join","Color_1","Function","bind","concat","version","chroma_1","unpack$1","rgb2cmyk","ref","r","g","f","c","m","y","rgb2cmyk_1","unpack$2","cmyk2rgb","alpha","cmyk2rgb_1","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","round","hsl2css","hsla","hsl2css_1","unpack$5","rgb2hsl","s","h","Number","NaN","rgb2hsl_1","unpack$6","last$3","rgb2css","rgba","substr","rgb2css_1","unpack$7","round$1","hsl2rgb","assign","t3","t2","t1","h_","hsl2rgb_1","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","trim","named","e","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg","delta","_g","rgb2hcg_1","unpack$a","floor","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","hcg2rgb_1","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","type$5","indexOf","unpack$d","sqrt","acos","rgb2hsi","min_","rgb2hsi_1","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb","isNaN","hsi2rgb_1","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsl$1","max_","rgb2hsv","unpack$i","floor$1","hsv2rgb","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","Kn","Xn","Yn","Zn","t0","unpack$k","pow","rgb2lab","ref$1","rgb2xyz","z","rgb_xyz","xyz_lab","rgb2lab_1","unpack$l","pow$1","lab2rgb","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch","lab2lch_1","unpack$o","rgb2lch","rgb2lch_1","unpack$p","sin","cos$1","lch2lab","lch2lab_1","unpack$q","lch2rgb","L","lch2rgb_1","unpack$r","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$s","type$a","lch","forEach","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","type$b","keys","n","unpack$t","rgb2num","rgb2num_1","type$c","num2rgb","num","num2rgb_1","type$d","unpack$u","type$e","round$5","log","temperature2rgb","kelvin","temp","temperature2rgb_1","unpack$v","round$6","rgb2temperature","minTemp","maxTemp","eps","rgb2temperature_1","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","value","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","x1","y1","z1","x2","y2","z2","lab$1","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","lch$1","num$1","c1","c2","hcg$1","hsi$1","hsv$1","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","average","colors","weights","from","reduce","w","_average_lrgb","first","shift","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","bezier_1","blend","bottom","top","blend_f","c0","each","normal","multiply","darken$1","lighten","screen","overlay","burn","dodge","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","digits","floor$2","random","random_1","code","log$1","pow$7","floor$3","data","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","contrast","l1","l2","sqrt$4","atan2$2","abs$1","cos$4","PI$2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delL","delC","delA","delB","dH2","v1","v2","v3","distance","sum_sq","valid","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","chroma_js"],"sources":["C:/Users/luna-/OneDrive/Escritorio/smels/node_modules/chroma-js/chroma.js"],"sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.2';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}